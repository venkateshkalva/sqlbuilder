<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Start-Stop Clock</title>
</head>
<body>
<h1 id="clock">00:00:00</h1>
<button onclick="startStop()">Start/Stop</button>
<button onclick="reset()">Reset</button>

<script>
let startTime;
let elapsedTime = 0;
let running = false;
let interval;

// Function to start or stop the stopwatch
function startStop() {
    if (running) {
        clearInterval(interval);
        running = false;
        localStorage.setItem('startTime', startTime);
        localStorage.setItem('elapsedTime', elapsedTime);
    } else {
        startTime = localStorage.getItem('startTime') ? parseInt(localStorage.getItem('startTime')) : Date.now();
        elapsedTime = localStorage.getItem('elapsedTime') ? parseInt(localStorage.getItem('elapsedTime')) : 0;
        interval = setInterval(updateClock, 1000);
        running = true;
        updateClock(); // Update clock immediately when starting
    }
}

// Function to update the clock display
function updateClock() {
    const currentTime = Date.now();
    elapsedTime += (currentTime - startTime);
    startTime = currentTime;

    const hours = Math.floor(elapsedTime / (1000 * 60 * 60));
    const minutes = Math.floor((elapsedTime % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((elapsedTime % (1000 * 60)) / 1000);
    document.getElementById('clock').textContent = formatTime(hours) + ':' + formatTime(minutes) + ':' + formatTime(seconds);
}

// Function to format time values
function formatTime(time) {
    return time < 10 ? '0' + time : time;
}

// Function to reset the stopwatch
function reset() {
    clearInterval(interval);
    running = false;
    localStorage.removeItem('startTime');
    localStorage.removeItem('elapsedTime');
    elapsedTime = 0;
    document.getElementById('clock').textContent = '00:00:00';
}

// Start the stopwatch automatically when the page loads
window.onload = startStop;
</script>
</body>
</html>
